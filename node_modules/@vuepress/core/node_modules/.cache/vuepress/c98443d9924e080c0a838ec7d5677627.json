{"remainingRequest":"/home/forge/libellux.bitbucket.io/node_modules/babel-loader/lib/index.js??ref--3-1!/home/forge/libellux.bitbucket.io/node_modules/vuepress-plugin-social-share/lib/utils.js","dependencies":[{"path":"/home/forge/libellux.bitbucket.io/node_modules/vuepress-plugin-social-share/lib/utils.js","mtime":1596917564000},{"path":"/home/forge/libellux.bitbucket.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/forge/libellux.bitbucket.io/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIGluQnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnOwpleHBvcnQgdmFyIFJFX0VYVEVSTkFMX0xJTksgPSAvXihodHRwcz86fG1haWx0bzp8dGVsOnxbYS16QS1aXXs0LH06KS87CmV4cG9ydCB2YXIgUkVfU1ZHX1NPVVJDRSA9IC88c3ZnICguKj8pPiguKj8pPFwvc3ZnPi9pOwovKioKICogUmV0dXJuIG1ldGEgdGFnJ3MgY29udGVudCBpbiBicm93c2VyIGJ5IG5hbWUKICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgbWV0YSB0YWcncyBuYW1lCiAqCiAqIEByZXR1cm5zIG1ldGEgdGFnJ3MgY29udGVudCBpZiBleGlzdHMsIG9yIGAnJ2AKICovCgpleHBvcnQgZnVuY3Rpb24gZ2V0TWV0YUNvbnRlbnRCeU5hbWUobmFtZSkgewogIGlmICghaW5Ccm93c2VyKSByZXR1cm4gJyc7CiAgcmV0dXJuIChkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZShuYW1lKVswXSB8fCAwKS5jb250ZW50IHx8ICcnOwp9Ci8qKgogKiBDaGVjayBpZiB0aGUgZ2l2ZW4gdXJsIGlzIGV4dGVybmFsCiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgZ2l2ZW4gdXJsCiAqCiAqIEByZXR1cm5zIHtib29sZWFufSBgdHJ1ZWAgaXMgZ2l2ZW4gYW4gZXh0ZXJuYWwgdXJsCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGlzRXh0ZXJuYWxVcmwodXJsKSB7CiAgcmV0dXJuIFJFX0VYVEVSTkFMX0xJTksudGVzdCh1cmwpOwp9Ci8qKgogKiBDaGVjayBpZiB0aGUgZ2l2ZW4gc291cmNlIHN0cmluZyBpcyBTVkcKICogQHBhcmFtIHtzdHJpbmd9IHNvdXJjZSBnaXZlbiBzb3VyY2Ugc3RyaW5nCiAqCiAqIEByZXR1cm5zIHtib29sZWFufSBgdHJ1ZWAgaWYgZ2l2ZW4gYSBzdmcgc291cmNlIHN0cmluZwogKi8KCmV4cG9ydCBmdW5jdGlvbiBpc1NWRyhzb3VyY2UpIHsKICByZXR1cm4gUkVfU1ZHX1NPVVJDRS50ZXN0KHNvdXJjZSk7Cn0="},{"version":3,"sources":["/home/forge/libellux.bitbucket.io/node_modules/vuepress-plugin-social-share/lib/utils.js"],"names":["inBrowser","window","RE_EXTERNAL_LINK","RE_SVG_SOURCE","getMetaContentByName","name","document","getElementsByName","content","isExternalUrl","url","test","isSVG","source"],"mappings":"AAAA,IAAMA,SAAS,GAAG,OAAOC,MAAP,KAAkB,WAApC;AAEA,OAAO,IAAMC,gBAAgB,GAAG,uCAAzB;AACP,OAAO,IAAMC,aAAa,GAAG,0BAAtB;AAEP;;;;;;;AAMA,OAAO,SAASC,oBAAT,CAA+BC,IAA/B,EAAqC;AAC1C,MAAI,CAACL,SAAL,EAAgB,OAAO,EAAP;AAEhB,SAAO,CAACM,QAAQ,CAACC,iBAAT,CAA2BF,IAA3B,EAAiC,CAAjC,KAAuC,CAAxC,EAA2CG,OAA3C,IAAsD,EAA7D;AACD;AAED;;;;;;;AAMA,OAAO,SAASC,aAAT,CAAwBC,GAAxB,EAA6B;AAClC,SAAOR,gBAAgB,CAACS,IAAjB,CAAsBD,GAAtB,CAAP;AACD;AAED;;;;;;;AAMA,OAAO,SAASE,KAAT,CAAgBC,MAAhB,EAAwB;AAC7B,SAAOV,aAAa,CAACQ,IAAd,CAAmBE,MAAnB,CAAP;AACD","sourcesContent":["const inBrowser = typeof window !== 'undefined'\n\nexport const RE_EXTERNAL_LINK = /^(https?:|mailto:|tel:|[a-zA-Z]{4,}:)/\nexport const RE_SVG_SOURCE = /<svg (.*?)>(.*?)<\\/svg>/i\n\n/**\n * Return meta tag's content in browser by name\n * @param {string} name meta tag's name\n *\n * @returns meta tag's content if exists, or `''`\n */\nexport function getMetaContentByName (name) {\n  if (!inBrowser) return ''\n\n  return (document.getElementsByName(name)[0] || 0).content || ''\n}\n\n/**\n * Check if the given url is external\n * @param {string} url given url\n *\n * @returns {boolean} `true` is given an external url\n */\nexport function isExternalUrl (url) {\n  return RE_EXTERNAL_LINK.test(url)\n}\n\n/**\n * Check if the given source string is SVG\n * @param {string} source given source string\n *\n * @returns {boolean} `true` if given a svg source string\n */\nexport function isSVG (source) {\n  return RE_SVG_SOURCE.test(source)\n}\n"]}]}
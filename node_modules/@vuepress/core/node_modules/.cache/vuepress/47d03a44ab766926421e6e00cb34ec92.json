{"remainingRequest":"/home/forge/libellux.bitbucket.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/forge/libellux.bitbucket.io/node_modules/vuepress-plugin-social-share/lib/components/SocialShare.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/forge/libellux.bitbucket.io/node_modules/vuepress-plugin-social-share/lib/components/SocialShare.vue","mtime":1597507638417},{"path":"/home/forge/libellux.bitbucket.io/node_modules/cache-loader/dist/cjs.js","mtime":1581601745860},{"path":"/home/forge/libellux.bitbucket.io/node_modules/babel-loader/lib/index.js","mtime":1596126721142},{"path":"/home/forge/libellux.bitbucket.io/node_modules/cache-loader/dist/cjs.js","mtime":1581601745860},{"path":"/home/forge/libellux.bitbucket.io/node_modules/vue-loader/lib/index.js","mtime":1596126721779}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTb2NpYWxTaGFyZU5ldHdvcmsgZnJvbSAnLi9Tb2NpYWxTaGFyZU5ldHdvcmsudnVlJwppbXBvcnQgewogIGlzRXh0ZXJuYWxVcmwsCiAgZ2V0TWV0YUNvbnRlbnRCeU5hbWUsCn0gZnJvbSAnLi4vdXRpbHMnCgpjb25zdCBpbkJyb3dzZXIgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJwpjb25zdCAkd2luZG93ID0gaW5Ccm93c2VyID8gd2luZG93IDogbnVsbAoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFNvY2lhbFNoYXJlTmV0d29yaywKICB9LAoKICBwcm9wczogewogICAgbmV0d29ya3M6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFsndHdpdHRlcicsICdmYWNlYm9vaycsICdyZWRkaXQnXSwKICAgIH0sCgogICAgdGFnczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gW10sCiAgICB9LAoKICAgIHR3aXR0ZXJVc2VyOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkLAogICAgfSwKCiAgICBmYWxsYmFja0ltYWdlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkLAogICAgfSwKCiAgICBhdXRvUXVvdGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZSwKICAgIH0sCgogICAgaXNQbGFpbjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgIH0sCgogICAgbmV0d29ya3NEYXRhOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gKHt9KSwKICAgIH0sCiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIHZpc2libGUgKCkgewogICAgICByZXR1cm4gdGhpcy5uZXR3b3Jrcy5sZW5ndGggJiYgIXRoaXMuJGZyb250bWF0dGVyLm5vU29jaWFsU2hhcmUKICAgIH0sCgogICAgdXJsICgpIHsKICAgICAgcmV0dXJuICgKICAgICAgICB0aGlzLiRmcm9udG1hdHRlci4kc2hhcmVVcmwgfHwKICAgICAgICB0aGlzLiRmcm9udG1hdHRlci5zaGFyZVVybCB8fAogICAgICAgICgkd2luZG93ID8gJHdpbmRvdy5sb2NhdGlvbi5ocmVmIDogJycpCiAgICAgICkKICAgIH0sCgogICAgdGl0bGUgKCkgewogICAgICByZXR1cm4gKAogICAgICAgIHRoaXMuJGZyb250bWF0dGVyLiRzaGFyZVRpdGxlIHx8CiAgICAgICAgdGhpcy4kZnJvbnRtYXR0ZXIuc2hhcmVUaXRsZSB8fAogICAgICAgIHRoaXMuJGZyb250bWF0dGVyLnRpdGxlIHx8CiAgICAgICAgKCR3aW5kb3cgPyAkd2luZG93LmRvY3VtZW50LnRpdGxlIDogdGhpcy4kdGl0bGUpCiAgICAgICkKICAgIH0sCgogICAgZGVzY3JpcHRpb24gKCkgewogICAgICByZXR1cm4gKAogICAgICAgIHRoaXMuJGZyb250bWF0dGVyLiRzaGFyZURlc2NyaXB0aW9uIHx8CiAgICAgICAgdGhpcy4kZnJvbnRtYXR0ZXIuc2hhcmVEZXNjcmlwdGlvbiB8fAogICAgICAgIHRoaXMuJGZyb250bWF0dGVyLmRlc2NyaXB0aW9uIHx8CiAgICAgICAgZ2V0TWV0YUNvbnRlbnRCeU5hbWUoJ2Rlc2NyaXB0aW9uJykgfHwKICAgICAgICB0aGlzLiRkZXNjcmlwdGlvbgogICAgICApCiAgICB9LAoKICAgIG1lZGlhICgpIHsKICAgICAgY29uc3QgbWVkaWFVcmwgPSAoCiAgICAgICAgdGhpcy4kZnJvbnRtYXR0ZXIuJHNoYXJlSW1hZ2UgfHwKICAgICAgICB0aGlzLiRmcm9udG1hdHRlci5zaGFyZUltYWdlIHx8CiAgICAgICAgdGhpcy4kZnJvbnRtYXR0ZXIuaW1hZ2UgfHwKICAgICAgICB0aGlzLmZhbGxiYWNrSW1hZ2UKICAgICAgKQoKICAgICAgaWYgKCFtZWRpYVVybCkgcmV0dXJuICcnCgogICAgICBpZiAoaXNFeHRlcm5hbFVybChtZWRpYVVybCkpIHJldHVybiBtZWRpYVVybAoKICAgICAgY29uc3QgcmVhbFVybCA9ICR3aW5kb3cKICAgICAgICA/IGAkeyR3aW5kb3cubG9jYXRpb24ub3JpZ2lufSR7dGhpcy4kd2l0aEJhc2UobWVkaWFVcmwpfWAKICAgICAgICA6ICcnCgogICAgICByZXR1cm4gcmVhbFVybAogICAgfSwKCiAgICBxdW90ZSAoKSB7CiAgICAgIHJldHVybiAoCiAgICAgICAgdGhpcy4kZnJvbnRtYXR0ZXIuJHNoYXJlUXVvdGUgfHwKICAgICAgICB0aGlzLiRmcm9udG1hdHRlci5zaGFyZVF1b3RlIHx8CiAgICAgICAgKHRoaXMuYXV0b1F1b3RlID8gdGhpcy5kZXNjcmlwdGlvbiA6ICcnKQogICAgICApCiAgICB9LAoKICAgIGhhc2h0YWdzICgpIHsKICAgICAgY29uc3Qgc2hhcmVUYWdzID0gKAogICAgICAgIHRoaXMuJGZyb250bWF0dGVyLiRzaGFyZVRhZ3MgfHwKICAgICAgICB0aGlzLiRmcm9udG1hdHRlci5zaGFyZVRhZ3MgfHwKICAgICAgICB0aGlzLiRmcm9udG1hdHRlci50YWdzIHx8CiAgICAgICAgdGhpcy4kZnJvbnRtYXR0ZXIudGFnIHx8CiAgICAgICAgdGhpcy50YWdzIHx8CiAgICAgICAgZ2V0TWV0YUNvbnRlbnRCeU5hbWUoJ2tleXdvcmRzJykKICAgICAgKQoKICAgICAgaWYgKEFycmF5LmlzQXJyYXkoc2hhcmVUYWdzKSkgewogICAgICAgIHJldHVybiBzaGFyZVRhZ3Muam9pbignLCcpCiAgICAgIH0KCiAgICAgIGlmICh0eXBlb2Ygc2hhcmVUYWdzID09PSAnc3RyaW5nJykgewogICAgICAgIHJldHVybiBzaGFyZVRhZ3MucmVwbGFjZSgvXHMvZywgJycpCiAgICAgIH0KCiAgICAgIHJldHVybiAnJwogICAgfSwKICB9LAoKICBkYXRhICgpIHsKICAgIC8vIFJlbW92ZSBkdXBsaWNhdGVkIG5ldHdvcmtzCiAgICBjb25zdCBuZXR3b3JrcyA9IFsuLi5uZXcgU2V0KHRoaXMubmV0d29ya3MpXQogICAgY29uc3QgdXNlck5ldHdvcmtzID0gT2JqZWN0LmtleXModGhpcy5uZXR3b3Jrc0RhdGEpCiAgICAgIC5tYXAobmFtZSA9PiAoeyBuYW1lLCAuLi50aGlzLm5ldHdvcmtzRGF0YVtuYW1lXSB9KSkKICAgICAgLmZpbHRlcihuZXR3b3JrID0+IG5ldHdvcmtzLmluY2x1ZGVzKG5ldHdvcmsubmFtZSkpCiAgICAgIC5zb3J0KChwcmV2LCBuZXh0KSA9PiBuZXR3b3Jrcy5pbmRleE9mKHByZXYubmFtZSkgLSBuZXR3b3Jrcy5pbmRleE9mKG5leHQubmFtZSkpCgogICAgcmV0dXJuIHsKICAgICAgdXNlck5ldHdvcmtzLAogICAgICBwb3B1cDogewogICAgICAgIHN0YXR1czogZmFsc2UsCiAgICAgICAgcmVzaXphYmxlOiBmYWxzZSwKICAgICAgICB0b29sYmFyOiBmYWxzZSwKICAgICAgICBtZW51YmFyOiBmYWxzZSwKICAgICAgICBzY3JvbGxiYXJzOiBmYWxzZSwKICAgICAgICBsb2NhdGlvbjogZmFsc2UsCiAgICAgICAgZGlyZWN0b3JpZXM6IGZhbHNlLAogICAgICAgIHdpZHRoOiA2MjYsCiAgICAgICAgaGVpZ2h0OiA0MzYsCiAgICAgICAgdG9wOiAwLAogICAgICAgIGxlZnQ6IDAsCiAgICAgICAgaW50ZXJ2YWw6IG51bGwsCiAgICAgIH0sCiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgLyoqCiAgICAgKiBPcGVucyBzaGFyZXIgcG9wdXAKICAgICAqCiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2hhcmVVcmwgdGFyZ2V0IHNoYXJlciB1cmwKICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIHNoYXJlciBuYW1lCiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsIGN1cnJlbnQgcGFnZSB1cmwKICAgICAqLwogICAgb3BlblNoYXJlciAoc2hhcmVVcmwsIHsgbmFtZSwgdXJsIH0pIHsKICAgICAgLy8gSWYgYSBwb3B1cCB3aW5kb3cgYWxyZWFkeSBleGlzdCBpdCB3aWxsIGJlIHJlcGxhY2VkLCB0cmlnZ2VyIGEgY2xvc2UgZXZlbnQKICAgICAgbGV0IHBvcHVwV2luZG93ID0gbnVsbAoKICAgICAgcG9wdXBXaW5kb3cgPSB3aW5kb3cub3BlbigKICAgICAgICBzaGFyZVVybCwKICAgICAgICAnc2hhcmVyJywKICAgICAgICAnc3RhdHVzPScgKyAodGhpcy5wb3B1cC5zdGF0dXMgPyAneWVzJyA6ICdubycpICsKICAgICAgICAnLGhlaWdodD0nICsgdGhpcy5wb3B1cC5oZWlnaHQgKwogICAgICAgICcsd2lkdGg9JyArIHRoaXMucG9wdXAud2lkdGggKwogICAgICAgICcscmVzaXphYmxlPScgKyAodGhpcy5wb3B1cC5yZXNpemFibGUgPyAneWVzJyA6ICdubycpICsKICAgICAgICAnLGxlZnQ9JyArIHRoaXMucG9wdXAubGVmdCArCiAgICAgICAgJyx0b3A9JyArIHRoaXMucG9wdXAudG9wICsKICAgICAgICAnLHNjcmVlblg9JyArIHRoaXMucG9wdXAubGVmdCArCiAgICAgICAgJyxzY3JlZW5ZPScgKyB0aGlzLnBvcHVwLnRvcCArCiAgICAgICAgJyx0b29sYmFyPScgKyAodGhpcy5wb3B1cC50b29sYmFyID8gJ3llcycgOiAnbm8nKSArCiAgICAgICAgJyxtZW51YmFyPScgKyAodGhpcy5wb3B1cC5tZW51YmFyID8gJ3llcycgOiAnbm8nKSArCiAgICAgICAgJyxzY3JvbGxiYXJzPScgKyAodGhpcy5wb3B1cC5zY3JvbGxiYXJzID8gJ3llcycgOiAnbm8nKSArCiAgICAgICAgJyxsb2NhdGlvbj0nICsgKHRoaXMucG9wdXAubG9jYXRpb24gPyAneWVzJyA6ICdubycpICsKICAgICAgICAnLGRpcmVjdG9yaWVzPScgKyAodGhpcy5wb3B1cC5kaXJlY3RvcmllcyA/ICd5ZXMnIDogJ25vJyksCiAgICAgICkKCiAgICAgIHBvcHVwV2luZG93LmZvY3VzKCkKCiAgICAgIC8vIENyZWF0ZSBhbiBpbnRlcnZhbCB0byBkZXRlY3QgcG9wdXAgY2xvc2luZyBldmVudAogICAgICB0aGlzLnBvcHVwLmludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgIGlmIChwb3B1cFdpbmRvdyAmJiBwb3B1cFdpbmRvdy5jbG9zZWQpIHsKICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5wb3B1cC5pbnRlcnZhbCkKCiAgICAgICAgICBwb3B1cFdpbmRvdyA9IHVuZGVmaW5lZAoKICAgICAgICAgIHRoaXMuJHJvb3QuJGVtaXQoJ3NvY2lhbF9zaGFyZV9jbG9zZScsIHsgbmFtZSwgdXJsIH0pCiAgICAgICAgfQogICAgICB9LCA1MDApCiAgICB9LAogIH0sCgogIC8qKgogICAqIFNldHMgcG9wdXAgZGVmYXVsdCBkaW1lbnNpb25zLgogICAqLwogIG1vdW50ZWQgKCkgewogICAgaWYgKCFpbkJyb3dzZXIpIHJldHVybiBmYWxzZQoKICAgIC8qKgogICAgICogQ2VudGVyIHRoZSBwb3B1cCBvbiBkdWFsIHNjcmVlbnMKICAgICAqIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDA2ODM3My9jZW50ZXItYS1wb3B1cC13aW5kb3ctb24tc2NyZWVuLzMyMjYxMjYzCiAgICAgKi8KICAgIGNvbnN0IGRvY0VsZW0gPSAkd2luZG93LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudAogICAgY29uc3Qgc2NyZWVuID0gJHdpbmRvdy5zY3JlZW4KICAgIGNvbnN0IGR1YWxTY3JlZW5MZWZ0ID0gJHdpbmRvdy5zY3JlZW5MZWZ0ICE9PSB1bmRlZmluZWQKICAgICAgPyAkd2luZG93LnNjcmVlbkxlZnQKICAgICAgOiBzY3JlZW4ubGVmdAogICAgY29uc3QgZHVhbFNjcmVlblRvcCA9ICR3aW5kb3cuc2NyZWVuVG9wICE9PSB1bmRlZmluZWQKICAgICAgPyAkd2luZG93LnNjcmVlblRvcAogICAgICA6IHNjcmVlbi50b3AKICAgIGNvbnN0IHdpZHRoID0gJHdpbmRvdy5pbm5lcldpZHRoCiAgICAgID8gJHdpbmRvdy5pbm5lcldpZHRoCiAgICAgIDogKGRvY0VsZW0uY2xpZW50V2lkdGggPyBkb2NFbGVtLmNsaWVudFdpZHRoIDogc2NyZWVuLndpZHRoKQogICAgY29uc3QgaGVpZ2h0ID0gJHdpbmRvdy5pbm5lckhlaWdodAogICAgICA/ICR3aW5kb3cuaW5uZXJIZWlnaHQKICAgICAgOiAoZG9jRWxlbS5jbGllbnRIZWlnaHQgPyBkb2NFbGVtLmNsaWVudEhlaWdodCA6IHNjcmVlbi5oZWlnaHQpCgogICAgdGhpcy5wb3B1cC5sZWZ0ID0gKCh3aWR0aCAvIDIpIC0gKHRoaXMucG9wdXAud2lkdGggLyAyKSkgKyBkdWFsU2NyZWVuTGVmdAogICAgdGhpcy5wb3B1cC50b3AgPSAoKGhlaWdodCAvIDIpIC0gKHRoaXMucG9wdXAuaGVpZ2h0IC8gMikpICsgZHVhbFNjcmVlblRvcAogIH0sCn0K"},null]}
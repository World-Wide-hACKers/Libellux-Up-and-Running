{"remainingRequest":"/home/forge/libellux.bitbucket.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/forge/libellux.bitbucket.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/forge/libellux.bitbucket.io/node_modules/vue-loader/lib/index.js??ref--1-1!/home/forge/libellux.bitbucket.io/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/forge/libellux.bitbucket.io/docs/graylog/README.md?vue&type=template&id=6891b9c4&","dependencies":[{"path":"/home/forge/libellux.bitbucket.io/docs/graylog/README.md","mtime":1597662739000},{"path":"/home/forge/libellux.bitbucket.io/node_modules/cache-loader/dist/cjs.js","mtime":1581601745860},{"path":"/home/forge/libellux.bitbucket.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1596126721779},{"path":"/home/forge/libellux.bitbucket.io/node_modules/cache-loader/dist/cjs.js","mtime":1581601745860},{"path":"/home/forge/libellux.bitbucket.io/node_modules/vue-loader/lib/index.js","mtime":1596126721779},{"path":"/home/forge/libellux.bitbucket.io/node_modules/@vuepress/markdown-loader/index.js","mtime":1596642269684}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
{"remainingRequest":"/home/forge/libellux.bitbucket.io/node_modules/babel-loader/lib/index.js??ref--3-1!/home/forge/libellux.bitbucket.io/node_modules/@vuepress/core/.temp/internal/siteData.js","dependencies":[{"path":"/home/forge/libellux.bitbucket.io/node_modules/@vuepress/core/.temp/internal/siteData.js","mtime":1598279275483},{"path":"/home/forge/libellux.bitbucket.io/node_modules/cache-loader/dist/cjs.js","mtime":1581601745860},{"path":"/home/forge/libellux.bitbucket.io/node_modules/babel-loader/lib/index.js","mtime":1596126721142}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
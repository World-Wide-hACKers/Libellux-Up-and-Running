set ssl {
     selfsigned : allow
}

set mmonit https://username:password@192.168.0.1:8443/collector

set httpd port 2812 and
    allow localhost
    allow 192.168.0.1
    allow username:password
    with ssl {
        pemfile: /etc/monit/monit.pem
        version: TLSv12
        ciphers: "ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384"
    }

set daemon  120
set logfile /var/log/monit.log

  check system $HOST
    if loadavg (1min) > 4 then alert
    if loadavg (5min) > 2 then alert
    if cpu usage (user) > 70% for 10 cycles then alert
    if cpu usage (system) > 30% for 10 cycles then alert
    if cpu usage (wait) > 20% for 10 cycles then alert
    if memory usage > 75% then alert
    if swap usage > 35% then alert

  check filesystem sda1 with path /dev/sda1
    if read rate > 1 MB/s for 5 cycles then alert
    if read rate > 500 operations/s for 5 cycles then alert
    if write rate > 1 MB/s for 5 cycles then alert
    if write rate > 500 operations/s for 5 cycles then alert
    # Service Time is the time taken to complete a read or a write operation
    if service time > 100 milliseconds for 5 cycles then alert
    if space usage > 80% for 5 times within 15 cycles then alert

  # Digital Ocean Volume
  #check filesystem volume-lbx01-test01 with path /dev/disk/by-id/scsi-0DO_Volume_volume-lbx01-test01
  #  if space usage > 80% for 5 times within 15 cycles then alert

  check network public with interface eth0
    if failed link then alert
    if changed link then alert
    if saturation > 90% then alert
    if download > 10 MB/s then alert
    if total uploaded > 1 GB in last hour then alert

  check process ssh with pidfile /var/run/sshd.pid
    start program  "/etc/init.d/ssh start"
    stop program  "/etc/init.d/ssh stop"
    if failed port 22 protocol ssh then restart
    if 5 restarts within 5 cycles then timeout

  #check process rsyslogd with pidfile /var/run/rsyslogd.pid
  #  start program = "/etc/init.d/rsyslog start"
  #  stop program = "/etc/init.d/rsyslog stop"
  #  if 5 restarts within 5 cycles then timeout

  check process crond with pidfile /var/run/crond.pid
    start program = "/etc/init.d/cron start"
    stop program = "/etc/init.d/cron stop"
    if 5 restarts within 5 cycles then timeout

  check process nginx with pidfile /var/run/nginx.pid
    start program = "/etc/init.d/nginx start"
    stop program  = "/etc/init.d/nginx stop"
    if 5 restarts within 5 cycles then timeout

  check process php7.4-fpm with pidfile /var/run/php/php7.4-fpm.pid
    start program = "/etc/init.d/php7.4-fpm start"
    stop program = "/etc/init.d/php7.4-fpm stop"
    if failed unixsocket /var/run/php/php7.4-fpm.sock then restart
    if 5 restarts within 5 cycles then timeout

  #check process mysqld with pidfile /var/run/mysqld/mysqld.pid
  #  start program = "/etc/init.d/mysql start"
  #  stop program = "/etc/init.d/mysql stop"
  #  if failed
  #    unixsocket /var/run/mysqld/mysqld.sock
  #    protocol mysql username "monit" password ""
  #  then alert
  #  if 5 restarts within 5 cycles then timeout

  check process ossec-agentd matching "ossec-agentd"
    start program = "/var/ossec/bin/ossec-control start"
    stop program = "/var/ossec/bin/ossec-control stop"
    if 3 restarts within 5 cycles then alert

  check process ossec-execd matching "ossec-execd"
    start program = "/var/ossec/bin/ossec-control start"
    stop program = "/var/ossec/bin/ossec-control stop"
    if 3 restarts within 5 cycles then alert

  check process ossec-logcollector matching "ossec-logcollector"
    start program = "/var/ossec/bin/ossec-control start"
    stop program = "/var/ossec/bin/ossec-control stop"
    if 3 restarts within 5 cycles then alert

  check process ossec-syscheckd matching "ossec-syscheckd"
    start program = "/var/ossec/bin/ossec-control start"
    stop program = "/var/ossec/bin/ossec-control stop"
    if 3 restarts within 5 cycles then alert

  check process psad with pidfile /var/run/psad/psad.pid
    start program = "/etc/init.d/psad start"
    stop program = "/etc/init.d/psad stop"
    if 3 restarts within 5 cycles then alert

  check process fail2ban with pidfile /var/run/fail2ban/fail2ban.pid
    start program = "/etc/init.d/fail2ban start"
    stop program = "/etc/init.d/fail2ban stop"
    if 5 restarts within 5 cycles then timeout

  check host libellux.com with address libellux.com
  if failed
    port 443
    protocol https
    and certificate valid > 80 days
  then alert

  ###########################################
  # ToDo list:
  # * OpenVAS
  # * ClamAV
  # * and more following ...
  #
